generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Users {
  userId    Int      @id @default(autoincrement()) @map("user_id")
  email     String   @unique @map("email")
  password  String   @map("passwoed")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  userInfos UserInfos?  // 사용자(Users) 테이블과 사용자 정보(UserInfos) 테이블이 1:1 관계를 맺습니다. , 1명의 사용자는 1개의 사용자 정보를 가진다.
  @@map("user")
}

enum Role {
  RECRUITER
  APPLICANT
}

model UserInfos {
  userInfoId Int      @id @default(autoincrement()) @map("user_info_id")
  UserId     Int      @unique @map("user_id")  // 여기 왜 유니크가 받지?? 헷갈리면 엑셀 봐라
  name       String   @map("name")   // 동명이인 있을 수 있느니까 유니크 x 
  role       Role     @default(APPLICANT)  
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

// 이름, 모델이름        내가 참조 받는 값,     참조 해주는 값
  user   Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  Resume  Resume [] // // 1명의 사용자는 여러개의 이력서를 작성할 수 있다.
  @@map("user_infos")
}

enum Situation {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}

model Resume {
  resumeId         Int       @id @default(autoincrement()) @map("resume_id")
  UserId           Int       @map("user_id")   // 여기는 왜 또 유니크가 아니지? 혹시 어제 봤던 엑셀에서 이력서 조회 했을 때 쓴사람 아이디로 목록 조회 가능하니까?
  title            String    @map("title")
  selfIntroduction String    @db.Text @map("self_introduction")
  situation        Situation @default(APPLY)
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  userInfo   UserInfos @relation(fields: [UserId], references: [UserId], onDelete: Cascade)

  @@map("resume")
}